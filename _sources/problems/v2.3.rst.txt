安装问题
========

安装时最好不要看\ ``README.md``\ 自己研究，
推荐一视数学卷毛杨的两个教程：

-  https://www.bilibili.com/video/av38126904

-  https://www.bilibili.com/read/cv4139851

``Python``\ 问题
----------------

Q1: 使用\ ``anaconda``\ ，命令行输入\ ``python``\ 无反应或报错
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

考虑\ ``path``\ 环境变量是否填全 [1]_，\ ``path``\ 变量里应该有：

::

       <your_path>\Anaconda3;
       <your_path>\Anaconda3\Scripts;
       <your_path>\Anaconda3\Library\bin;

Q2: ``pip install ...``\ 时满屏红字报错，或者安装过慢
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

更换国内镜像源，使用

::

       pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple

代替 [2]_

::

       pip install -r requirements.txt

Q3: ``pip``\ 安装\ ``pycairo``\ 总是失败
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

下载\ ``pycairo``\ 对应版本的\ ``whl``\ 包  [3]_

::

       pycairo......whl

并手动安装

::

       pip install pycairo......whl

Q4: ``pip``\ 安装过包，但运行时提示没有模块
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

考虑电脑上是否有多个\ ``Python``\ ，确定\ ``pip``\ 把包装到了需要使用的\ ``Python``\ 上面。

Q5: 关于\ ``scipy``\ 有报错
~~~~~~~~~~~~~~~~~~~~~~~~~~~

可能是版本不对，使用\ ``pip uninstall``\ 后重新\ ``pip install scipy``

运行时问题
==========

``import``\ 问题
----------------

Q1: 没有模块\ ``big_ol_pile_of_manim_imports``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

将文件中的

::

       from big_ol_pile_of_manim_imports import *

改成

::

       from manimlib.imports import *

LaTeX问题
---------

Q1: 报错\ ``Latex error converting to dvi``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

先不要管错误在哪，先把\ ``manimlib/constants.py``\ 中的\ ``TEX_USE_CTEX``\ 改成\ ``True``\ 再运行

.. _sub:Q2:

Q2: 报错 ``xelatex error converting to xdv``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

若为\ ``Windows``\ 系统，先把\ ``manimlib/constants.py``\ 的第29行：

::

       MEDIA_DIR = "./media"

改成

::

       MEDIA_DIR = os.path.join(os.getcwd(), "media")

再进行尝试

I.   **若安装的TeX发行版为MiKTeX**

     1. ``MiKTeX``\ 的有关路径是否添加到环境变量中

     2. 是否有包没有装全

     | 对于\ ``2.``\ ，可以正常运行一遍\ ``WriteStuff``\ 场景，看是否有框弹出提示\ ``install``\ 什么东西，
       如果有，则\ ``install``\ ，并重复运行安装运行安装...直到不报错为止。
     | 或者使用TeX编辑器\ ``TeXStudio``
       并使用\ ``xelatex``\ 手动编译\ ``media/Tex``\ 文件夹中的
       ``.tex``\ 文件，查看是否有包没有安装。

     对于没有\ ``1.``\ 和\ ``2.``\ 问题却依旧报错的，可以选择重新安装新版\ ``MiKTeX``\ 或者安装\ ``TeXLive-full``\ 版。

II.  **若安装的TeX发行版为TeXLive**

     1. ``TeXLive``\ 有关路径是否添加到环境变量中

     2. 安装的是否为\ ``full``\ 版本

III. **若安装的TeX发行版不为以上两款**

     建议换成\ ``TeXLive-full``\ 版或者\ ``MiKTeX``\ ，并且在重新安装前请删除旧版

Q3: 报错在文件夹内找不到\ ``svg``\ 文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

清空\ ``media/Tex``\ 文件夹内全部内容，再次运行带文字的场景，查看\ ``Tex``\ 文件夹中的内容：

I.  若仅有\ ``tex``\ 文件和\ ``log``\ 文件,按照\ ``[sub:Q2]``\ 中方法处理

II. 若含有\ ``xdv``\ 文件但没有\ ``svg``\ 文件

    1. ``divsvgm``\ 是否添加到环境变量，可以使用\ ``dvisvgm –version``\ 观察是否由报错来检查

    2. | ``dvisvgm``\ 版本是否过低，若\ ``dvisvgm –verison``\ 的输出版本号为1开头，
       | 请更换新版\ ``dvisvgm``\  [4]_，并注意将含有\ ``dvisvgm``\ 的文件夹添加到环境变量中

中文显示问题
------------

Q1: 含有中文的\ ``TextMobject``\ 编译报错，\ ``Latex error converting to dvi``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

将\ ``manimlib/constants.py``\ 中的\ ``TEX_USE_CTEX``\ 改成\ ``True``\ 再尝试

Q2: 英文可以正常显示，中文不报错，但不显示
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

考虑使用的是否为\ ``TextMobject``\ 而不是\ ``TexMobject``

文字问题
--------

Q1: ``TextMobject``\ 和\ ``TexMobject``\ 有什么区别
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``TextMobject``\ 和\ ``TexMobject``\ 使用的都是LaTeX语法

其中\ ``TextMobject``\ 文字模式相当于直接在LaTeX环境下书写

``TexMobject``\ 公式模式使用的是LaTeX的 ``\begin{align*}``
环境或者可以看成加了\ :math:`\texttt{\$}\texttt{\$}`\ 的环境

使用\ ``TextMobject``\ 与\ ``TexMobject``\ 书写公式时：

Q2: ``TextMobject``\ 中怎么改字体样式
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

``TextMobject``\ 中只能使用LaTeX的字体样式

字体常用样式命令见表：

============== ============== ============= ==============
字体样式       LaTeX命令      字体样式      LaTeX命令
============== ============== ============= ==============
roman          ``\textrm{…}`` **bold face** ``\textbf{…}``
sans serif     ``\textsf{…}`` medium weight ``\textmd{…}``
``typewriter`` ``\texttt{…}`` *italic*      ``\textit{…}``
Small Caps     ``\textsc{…}`` *slanted*     ``\textsl{…}``
upright        ``\textup{…}``              
============== ============== ============= ==============

严格地讲中文字体并没有衬线、无衬线、等宽、斜体等概念

Q3: 想自定义字体怎么办
~~~~~~~~~~~~~~~~~~~~~~

使用新版\ ``manim``\ 特有的\ ``Text()``\ 类，
方法如下\ ``Text("文字", font="字体")``\ ，
其中字体要填写在计算机内存储的格式 [5]_，但是不能使用LaTeX语法书写公式

Q4: 想用自定义字体写公式怎么办
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

可以使用群文件里\ ``cigar666``\ 编写的\ ``MyText()``\ 类\

Q5: ``TexMobject``\ 中换行是什么
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

四个右划线\ ``\\\\``\ ，
``Python``\ 转义右划线，所以涉及到\ ``\``\ 的均要写成两个\ ``\\``\ ，
而换行在LaTeX中是两个右划线，所以要写成四个 [6]_

Q6: 公式怎么对齐
~~~~~~~~~~~~~~~~

I.   直接在\ ``TexMobject``\ 中使用\ ``&``\ 对齐

II.  两个\ ``mobject``\ 对齐，使用\ ``obj2.next_to(obj1, DOWN, aligned_edge=LEFT)``\ 使\ ``obj2``\ 在\ ``obj1``\ 下方，并左对齐

III. ``VGroup``\ 内对齐，使用\ ``group.arrange(DOWN, aligned_edge=LEFT)``\ 使\ ``VGroup``\ 中的子元素依次向下排开，并左对齐

写公式的示例：

https://github.com/Elteoremadebeethoven/AnimationsWithManim/blob/master/English/3_text_like_arrays/scenes.md

Q7: ``TexMobject``\ 上色问题的处理办法
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

I.   将上色的字符分开，使用\ ``text[i].set_color(color)`` 来上色

II.  将上色的字符分开，使用\ ``text.set_color_by_tex_to_color_map(t2c)``\ 传入\ ``t2c``\ 字典来对相同的字符串上色

III. 只传入一个字符串，但同时传入\ ``tex_to_color_map=t2c``\ 来自动拆分上色(容易出问题)

IV.  只传入一个字符串，使用\ ``text[0][i]``\ 来对细小的路径上色(一般是一个字符一个下标)

Q8: ``TexMobject``\ 的下标怎么分析
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

I.  使用\ ``debugTeX``\  [7]_,先\ ``self.add(tex)``\ 然后再\ ``debugTeX(self, tex)``\ ，
    导出最后一帧 [8]_，观察每段字符上的标号，即为下标

II. 使用自带的函数\ ``get_submobject_index_labels``\ 获取下标的\ ``VGroup``\ ，然后添加

Q9: ``TexMobject``\ 使用 ``\frac`` 拆分时出错
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

这个是\ ``Grant``\ 写\ ``tex_file_writing.py`` 的一个\ ``bug``\ ，
建议使用\ ``{``\ 分子 ``\over``\ 分母\ ``}`` 来代替
``\frac{``\ 分子\ ``}{``\ 分母\ ``}``

Q10: 括号匹配不全
~~~~~~~~~~~~~~~~~

显示不全的例子

.. math::
   \begin{cases}
   a+b\\
   b+a
   \end{cases}


::

      TexMobject(r"\left\{\begin{matrix} a+b \\ b+a \\ \end{matrix}\right.")

``matrix``\ 这样的写法在\ ``manim``\ 中会报错，无法生成\ ``dvi``\ ，
原因是\ ``manim``\ 会自动寻找相对应的括号来匹配，这里缺少了右边的大括号

所以推荐使用\ ``cases``\ 环境,效果是一样的：

.. math::
   \begin{cases}
    a+b \\
    b+a \\
   \end{cases}

::

       TexMobject(r"\begin{cases} a+b \\ b+a \\ \end{cases}")

素材引用问题
------------

Q1: 使用\ ``SVGMobject``\ 找不到\ ``svg``\ 文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

I.  直接使用绝对路径引用\ ``svg``\ 文件

II. 将\ ``svg``\ 文件放到\ ``assets/svg_images/``\ 文件夹中

Q2: 如何使用\ ``jpg``\ 或者\ ``png``\ 文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

I.  直接使用绝对路径引用，并使用\ ``ImageMobject``

II. 将\ ``jpg/png``\ 文件放到\ ``assets/raster_images/``\ 文件夹中

Q3: 能否导入\ ``gif``\ 文件
~~~~~~~~~~~~~~~~~~~~~~~~~~~

可以使用\ ``ImageMobject``\ 导入，但是只保留第一帧，不会显示动图


其它问题
========

Q1: 有什么manim教程
-------------------

https://github.com/manim-kindergarten/manim\ 这里的\ ``README``\ 文件中也有整合

1. ``MK``\ 制作的系列视频教程（制作中）

   -  https://space.bilibili.com/171431343/favlist?fid=947158443

2. 群主\ ``cigar666``\ 的B站专栏

   -  https://www.bilibili.com/read/readlist/rl82339

3. ``pdcxs``\ 大大转载的\ ``manim``\ 教程

   -  https://www.bilibili.com/video/av64023740

   -  源码 https://github.com/Elteoremadebeethoven/AnimationsWithManim

4. ``GitHub``\ 上\ ``cai-hust``\ 的中文教程

   -  https://github.com/cai-hust/manim-tutorial-CN

5. 看\ ``manim``\ 源码

Q2: 没有\ ``manim``\ 源码
-------------------------

最好不要使用\ ``pip install manimlib``\ 来装\ ``manim``\ ，请在\ ``GitHub``\ 上\ ``clone``\ 下来\ ``manim``\ 的全部内容，
可以选择\ ``MK``\ 修改的版本：\ https://github.com/manim-kindergarten/manim

Q3: 群友用的\ ``manim``\ 都是什么版本
-------------------------------------

``manim``\ 不看版本，一般使用的都是最新库，\ ``release``\ 里面带版本号的都可以看作旧版

Q4: 如何使用傅里叶级数作图
--------------------------

套用 Grant 写好的文件

::

       active_projects/diffyq/part2/fourier_series.py
       active_projects/diffyq/part4/fourier_series_scenes.py
       active_projects/diffyq/part4/long_fourier_series.py

Q5: 傅里叶级数作图如何调整时长
------------------------------

``CONFIG``\ 中\ ``run_time``\ 无法控制，使用\ ``slow_factor``\ 和\ ``n_cycles``\ 来控制

:math:`\mathtt{\dfrac{1}{slow\_factor}}`\ 为一个循环的时间，\ ``n_cycles``\ 为循环的个数

只需要更换\ ``svg``\ 素材即可 [9]_

Q6: ``svg``\ 用什么软件制作
---------------------------

``Adobe Illustrator``\ (简称 AI)或者\ ``inkscape``\ (简称 ink)

尽量不要使用网页版编辑器

目前\ ``manim``\ 对\ ``SVG``\ 的解析很局限，推荐使用\ ``AI``\ 导出

Q7: 动画怎么显示旋转一个物体
----------------------------

使用\ ``Ratate``\ 和\ ``Rotating``\ ，区别在群文件中有视频

Q8: ``Transform``\ 和\ ``ReplacementTransform``\ 有什么区别
-----------------------------------------------------------

1. ``Transform(A, B)``\ 在画面上\ ``A``\ 变成了\ ``B``\ 的样子，但是画面上的物体名字还叫\ ``A``

2. ``ReplacementTransform(A, B)``\ 在画面上\ ``A``\ 变成了\ ``B``\ 的样子，并且画面上的物体名字叫\ ``B``

所以以下两个效果相同

::

   self.play(Transform(A, B))
   self.play(Transform(A, C))

::

   self.play(ReplacementTransform(A, B))
   self.play(ReplacementTransform(B, C))

Q9: 怎么控制物体移动或者\ ``Transform``\ 的速率
-----------------------------------------------

使用\ ``rate_func``\ ，一些\ ``manim``\ 中已经定义的在群文件中有视频

.. image:: ../assets/image/rate_functions.png

Q10: 数学符号/公式 用LaTeX怎么打
--------------------------------

请见
https://www.luogu.com.cn/blog/IowaBattleship/latex-gong-shi-tai-quan

推荐妈咪叔维护的\ https://www.latexlive.com/

Q11: 一些特殊LaTeX的外部包
--------------------------

**如何使用manim画出上面的音符，或怎么使用这些包？**

在\ ``manimlib``\ 目录下的\ ``ctex_template.tex``\ 或者\ ``tex_template.tex``\ 文件中
添加外部包的名称 [10]_

就拿上面的音符为例，因为是在\ ``harmony``\ 包中的，所以在\ ``tex``\ 文件中添加\ ``\usepackage{harmony}``\  [11]_

然后新建一个\ ``py``\ 文件，写入代码

::

       from manimlib.imports import *
       class TestHarmony(Scene):
           def construct(self):
               # harmony具体用法请百度
               harmony = TextMobject(r"\Ganz \Halb \Vier \Acht \Sech \Zwdr")
               self.play(ShowCreation(harmony))
               self.wait()

运行py文件即可

Q12: 使用LaTeX外部包，编译错误或者无显示
----------------------------------------

首先，并不是所有外部包都能在\ ``manim``\ 中顺利使用，大多都不支持\ ``xelatex``\ 编译，
所以建议需要使用外部包时只用\ ``latex``\ 编译 [12]_

至于有些群友常用\ ``TiKZ``\ 这个外部包，也是使用\ ``latex``\ 才能顺利运行，
在\ ``xelatex``\ 用 ``\draw``\ 会无法显示，
需要修改\ ``tex_template.tex``\ 文件\ `[change] <#change>`__\ ，修改成如下：

::

       \documentclass[preview, dvisvgm]{standalone}
       \usepackage{tikz}

新建\ ``py``\ 文件，写入代码来画一条线：

::

       class TestTikz(Scene):
           def construct(self):
               tikz = TextMobject(
                   # tikz具体用法请百度
                   r"\tikz{\draw (-1, 0) -- (1, 0);}",
                   color=WHITE,
                   stroke_width=1,
                   stroke_opacity=1,
               )
               self.play(ShowCreation(tikz))
               self.wait()

运行py文件即可

Q13: 一些比较复杂,操纵东西比较多的动画怎么做
--------------------------------------------

使用外部剪辑软件,例如\ ``Adobe Premiere Pro``\ 或者达芬奇

Q14: 一个\ ``self.play``\ 里写两个\ ``ApplyMethod``\ 只对一个起作用怎么办
-------------------------------------------------------------------------

去掉\ ``ApplyMethod``\ ，例如：

::

       self.play(ApplyMethod(mob.scale, 2), ApplyMethod(mob.shift, DOWN))

改成

::

       self.play(mob.scale, 2, mob.shift, DOWN)

Q15: 如何解决二维画面中的图层问题
---------------------------------

可以使用\ ``pdcxs``\ 添加的\ ``plot_depth``\ ，具体更改见下图 [13]_

``MK fork``\ 的版本已经做了修改：\ https://github.com/manim-kindergarten/manim

|imagepd1|

|imagepd2|

Q16: 如何导出\ ``gif``\ 文件
----------------------------

在新版本中，\ ``manim``\ 导出\ ``gif``\ 已经失效，可以导出\ ``mp4``\ ，后用\ ``ffmpeg``\ 转换。也可以按照下图修改源码

``MK fork``\ 的版本已经做了修改：\ https://github.com/manim-kindergarten/manim

|imagegif|

改过后，在输入命令时加上\ ``-i``\ 选项，就能导出\ ``gif``\ 了

Q17: 如何导出透明的图片或者视频
-------------------------------

在运行命令的时候加上 ``-t``\ 选项

-  如果是 ``-s``\ 保存图片，则会存储为背景透明的\ ``png``\ 图片

-  如果是
   ``-l/-m/-w``\ 保存视频，则会存储为背景透明的\ ``mov``\ 视频文件，方便\ ``pr``\ 中的剪辑

Q18: 渲染视频的画质和帧率怎么调整
---------------------------------

``manim``\ 的默认画质有四种

-  ``-l`` 最低画质 ``480P15``

-  ``-m`` 中等画质 ``720P30``

-  ``–high_quality``\  [14]_ 高画质 ``1080P60``

-  ``-w`` 导出(最高)画质 ``1440P60(2K)``

-  ``-uhd`` 超高清 ``4K120fps``\ (B站最高) [15]_

不加画质选项，默认使用 ``-w``\ 最高画质 [16]_。
可以通过修改\ ``constants.py``\ 中对应的画面长宽和帧率来修改 [17]_

一般把 ``-w``\ 最高画质修改成\ ``1080P60``

Q19: 有没有什么好的场景例子供学习
---------------------------------

1. ``GitHub``\ 上\ ``manim-kindergarten/manim_sandbox``\ 中的\ ``demo``\ 和\ ``videos``\ 文件夹中的代码

2. ``Grant``\ 的代码 [18]_ 对应\ ``3B1B``\ 的视频，可能会有报错，需要魔改

3. 群文件里“``manim``\ 相关的\ ``python``\ 代码及视频结果”

4. 群里几个B站\ ``up``\ 主的\ ``GitHub``\ 库对应他们的代码

   -  ``cigar666`` https://github.com/cigar666/my_manim_projects

   -  鹤翔万里 https://github.com/Tony031218/manim_projects

   -  ``pdcxs`` https://github.com/pdcxs/ManimProjects

   -  有一种悲伤叫颓废 https://github.com/136108Haumea/my-manim



.. [1]
   安装\ \ ``anaconda``\ \ 时是否勾选添加到\ \ ``path``\ \ 变量

.. [2]
   临时换源

.. [3]
   群文件中有某个版本的\ \ ``pycairo``\ \ ，注意\ \ ``Python``\ \ 版本和系统版本是否均合适

.. [4]
   上网下载、或者使用群文件中的版本

.. [5]
   例如：Microsoft YaHei，Source Han Sans CN(Windows可以打开C:/Windows)

.. [6]
   或者在字符串前加r，正常书写

.. [7]
   https://github.com/manim-kindergarten/manim_sandbox/blob/master/utils/functions/debugTeX.py

.. [8]
   -s 选项

.. [9]
   自己制作，或者使用群里的\ \ ``svg``\ \ 素材

.. [10]
   修改\ \ ``TEX_USE_CTEX``\ \ 为\ \ ``True``\ \ 的，可以只在\ \ ``ctex_template.tex``\ \ 中添加

.. [11]
   不需要使用的时候记得改回来哦[change]

.. [12]
   即把\ \ ``TEX_USE_CTEX``\ \ 改为\ \ ``False``

.. [13]
   ``plot_depth``\ \ 的值越大，运行出来的物体就越在上面

.. [14]
   没有缩写

.. [15]
   仅限\ \ ``MK``\ \ 版本\ \ ``manim``

.. [16]
   比如 ``-p``\ \ (虽然很多人把 ``-p``\ \ 当成了 ``-w``\ \ 。。。)

.. [17]
   ``manimlib/constants.py``\ \ 的\ \ ``118``\ \ 行开始

.. [18]
   ``from_3b1b``\ \ 文件夹中

.. |imagepd1| image:: ../assets/image/CommonProblems/pd1.png
.. |imagepd2| image:: ../assets/image/CommonProblems/pd2.png
.. |imagegif| image:: ../assets/image/CommonProblems/gif.png
